// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN
// **TTPGradleTemplate** Unity.2019.3.15f1
apply plugin: 'com.android.application'

repositories {
        google()
        jcenter()
        flatDir {
            dirs 'libs'
        }
        maven {
            url 'https://s3.amazonaws.com/com.tabtale.repo/android/maven/backup'
        }
        maven {
            url 'https://s3.amazonaws.com/com.tabtale.repo/android/maven/ttplugins'
        }
        maven {
            url 'https://s3.amazonaws.com/com.tabtale.repo/android/maven/thirdparty'
        }
        maven {
            url 'http://deltadna.bintray.com/android'
        }
        maven {
            url "https://dl.bintray.com/ironsource-mobile/android-sdk"
        }
        maven {
            url "https://adcolony.bintray.com/AdColony"
        }
        maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
        maven { url "https://chartboostmobile.bintray.com/Chartboost" }
        maven {
            url 'https://maven.ogury.co'
        }
        maven {
            url  "https://dl.bintray.com/mintegral-official/mintegral_ad_sdk_android_for_oversea"
        }
        maven { url 'https://fyber.bintray.com/marketplace' }
    }

dependencies {
    implementation project(':unityLibrary')
    implementation 'com.android.support:multidex:1.0.3'
    }

android {
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

configurations.all {
        resolutionStrategy {
            force 'androidx.core:core:1.2.0'
            force 'androidx.media:media:1.0.1'
        }
    }

    defaultConfig {
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        applicationId '**APPLICATIONID**'
        ndk {
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
        multiDexEnabled true

        tasks.whenTaskAdded { task ->
            if (task.name.startsWith("bundle")) {
                def renameTaskName = "rename${task.name.capitalize()}Aab"
                def flavor = task.name.substring("bundle".length()).uncapitalize()
                tasks.create(renameTaskName, Copy) {
                    def path = "${buildDir}/outputs/bundle/${flavor}/"
                    from(path)
                    include "launcher.aab"
                    destinationDir file("${buildDir}/outputs/bundle/${flavor}/")
                    rename "launcher.aab", "launcher-release.aab"
                }

                task.finalizedBy(renameTaskName)
            }
        }
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb'**STREAMING_ASSETS**]
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }**SIGN**

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            minifyEnabled **MINIFY_DEBUG**
            useProguard **PROGUARD_DEBUG**
            proguardFiles getDefaultProguardFile('proguard-android.txt')**SIGNCONFIG**
            jniDebuggable true
        }
        release {
            minifyEnabled **MINIFY_RELEASE**
            useProguard **PROGUARD_DEBUG**
            proguardFiles getDefaultProguardFile('proguard-android.txt')**SIGNCONFIG**
        }
    }**PACKAGING_OPTIONS****SPLITS**
**BUILT_APK_LOCATION**
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}**SPLITS_VERSION_CODE****LAUNCHER_SOURCE_BUILD_SETUP**
